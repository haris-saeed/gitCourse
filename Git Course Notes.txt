Course: Git  - March 6, 2023 Monday 
Duration: 2 Hrs

Git commands in "DataEng Notes - NuqtaSol GDrive" folder

1) Create an empty Git repository or reinitialize an existing one
	$ git init
	
	$git status


2) Adding files to stage 
	$ git add <file-name>
	
	To add all file 
		$git add .
	
	
3) git config
	$ git config user.email "harisazfar35@gmail.com"
	$ git config user.name "haris-saeed"


4) git commit
	$ git commit -m "a msg for your commit"
	
	to overcome running adding & commiting command again & again do this:
		$ git commit -am "comit msg"   => this would add as well as commit


5) Add remote repo (link you local repo to the one on cloud)
	$ git remote add origin <repo cloning URL>
	
	
	To Verify if we have push & pull access on a particular cloud-repo
		$git remote -v


6) To push your staged files to remote repository 
	$git push origin -u master

	$git status
	
	
7) Branching
	$git branch <branch-name>  
	
	$git branch --list
	
	to switch branch:
		$git checkout <branch-name>
		
	to directly create & swicth to branch
		$ git checkout -b <branch-name-to-create>
		
		
		
		
===================================================================
		Copied from git console

$ git commit -m "modeified Git Course Notes txt file"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Git Course Notes.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Course Notes.txt.bak
        Practical-Git/

no changes added to commit (use "git add" and/or "git commit -a")

===================================================================

The Three States in Git
	.Modified:  means that you have changed the file but have not committed it to your database yet
	.Staged:  means that you have marked a modified file in its current version to go into your next commit snapshot
	.Commited: means that the data is safely stored in your local database.
	
	

 . squashing commit
 . rebasing